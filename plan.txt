[x]1. Подготовка проекта
    Установи FastAPI и Uvicorn.
    Создай базовую структуру проекта (папки для моделей, маршрутов, конфигураций).

2. Создание моделей данных
Модель пользователя:

Поля: name, email, password (хранение пароля в хэшированном виде).

Модель задачи (To-Do):

Поля: title, description, owner (связь с пользователем).

3. Создание базы данных
Используй SQLAlchemy или другую ORM для связи с базой данных.

Сформируй схемы базы данных для пользователя и задач.

Применяй миграции для создания таблиц.

4. Регистрация и вход пользователей
POST /register:

Принимается: name, email, password.

Проверка уникальности email.

Хэширование пароля и сохранение пользователя в базе.

Ответ: токен для аутентификации.

POST /login:

Принимается: email, password.

Проверка соответствия пароля и email.

Генерация и отправка токена (например, JWT).

5. CRUD для задач
POST /todos (создание задачи):

Принимается: title, description.

Пользователь должен быть аутентифицирован (проверка токена).

Ответ: данные созданной задачи.

PUT /todos/{id} (обновление задачи):

Принимается: title, description.

Проверка, что пользователь является владельцем задачи.

Ответ: обновленные данные задачи.

DELETE /todos/{id} (удаление задачи):

Пользователь должен быть авторизован для удаления.

Ответ: код статуса 204 (успешное удаление).

GET /todos (получение задач):

Параметры: page, limit.

Ответ: список задач с пагинацией.

6. Аутентификация и авторизация
Создавай и проверяй токены с помощью JWT (или другой технологии).

Везде, где требуется аутентификация (например, для создания задач), проверяй токен в заголовках.

7. Обработка ошибок
Обрабатывай:

Неверные данные (400).

Неавторизованные запросы (401).

Ошибки доступа (403).

Не найденные ресурсы (404).

8. Пагинация и фильтрация
Реализуй фильтрацию задач по определенным критериям (например, по статусу).

Реализуй пагинацию для запроса списка задач (параметры page, limit).

9. Тестирование
Напиши тесты:

Для всех CRUD операций.

Для аутентификации и авторизации.

Для пагинации и фильтрации.

Используй pytest для написания тестов.

10. Запуск и отладка
Запусти приложение с помощью Uvicorn.

Тестируй каждый эндпоинт с помощью Postman или cURL.

Проверь, что все маршруты работают корректно и отвечают нужными данными.

11. Дополнительные улучшения (по желанию)
Реализуй ограничение скорости (rate limiting) для API.

Добавь поддержку обновления токенов для продления сессии.